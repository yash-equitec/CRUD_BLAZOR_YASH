// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace BlazorApp1.Models;

public partial class StudentDBContext : DbContext
{
    public StudentDBContext(DbContextOptions<StudentDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<SkillsTable> SkillsTables { get; set; }

    public virtual DbSet<StudentTable> StudentTables { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<SkillsTable>(entity =>
        {
            entity.HasKey(e => e.Skills);

            entity.ToTable("Skills_Table");

            entity.Property(e => e.SkillsName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<StudentTable>(entity =>
        {
            entity.HasKey(e => e.StudentId).HasName("PK_Student_ID");

            entity.ToTable("Student_Table");

            entity.Property(e => e.StudentId).HasColumnName("Student_ID");
            entity.Property(e => e.StudentAddress)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Student_Address");
            entity.Property(e => e.StudentAge).HasColumnName("Student_Age");
            entity.Property(e => e.StudentDob)
                .HasColumnType("date")
                .HasColumnName("Student_DOB");
            entity.Property(e => e.StudentGender)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Student_Gender");
            entity.Property(e => e.StudentMobile).HasColumnName("Student_Mobile");
            entity.Property(e => e.StudentName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("Student_Name");

            entity.HasMany(d => d.Skills).WithMany(p => p.Students)
                .UsingEntity<Dictionary<string, object>>(
                    "StudentSkill",
                    r => r.HasOne<SkillsTable>().WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__StudentSk__Skill__3A81B327"),
                    l => l.HasOne<StudentTable>().WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__StudentSk__Stude__398D8EEE"),
                    j =>
                    {
                        j.HasKey("StudentId", "SkillsId").HasName("PK__StudentS__7B9F3C747FCE8FCB");
                        j.ToTable("StudentSkills");
                    });
        });

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}